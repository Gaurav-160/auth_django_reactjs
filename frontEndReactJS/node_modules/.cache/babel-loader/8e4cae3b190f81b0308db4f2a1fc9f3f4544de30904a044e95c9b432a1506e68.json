{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\drfBacktest\\\\frontend\\\\src\\\\views\\\\ConfirmNewPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmNewPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const resetPassword = async e => {\n    e.preventDefault();\n    var response = await fetch(`http://127.0.0.1:8000/api/password_reset/confirm/?token=d6401a7864d947af6b7d1688f49db6ff35c36f546`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        token\n      })\n    });\n    response = await response.json();\n    if (response.status === 'OK' || response.status === 200) {\n      setMessage(\"Well done !!! You can now proceed to login\");\n    } else {\n      setMessage(\"Something went wrong. Try Again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"ConfirmNewPassword\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter new password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmNewPassword, \"AEsgikwPfxSAREMouCdPB/13en4=\", false, function () {\n  return [useParams];\n});\n_c = ConfirmNewPassword;\nexport default ConfirmNewPassword;\nvar _c;\n$RefreshReg$(_c, \"ConfirmNewPassword\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","ConfirmNewPassword","_s","token","password","setPassword","message","setMessage","resetPassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","status","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/drfBacktest/frontend/src/views/ConfirmNewPassword.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ConfirmNewPassword() {\r\n\r\n  const {token} = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const resetPassword = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    var response = await fetch(\r\n      `http://127.0.0.1:8000/api/password_reset/confirm/?token=d6401a7864d947af6b7d1688f49db6ff35c36f546`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ password, token }),\r\n      }\r\n    );\r\n\r\n    response = await response.json();\r\n\r\n    if(response.status === 'OK' || response.status === 200){\r\n        setMessage(\"Well done !!! You can now proceed to login\")\r\n    }else{\r\n        setMessage(\"Something went wrong. Try Again.\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      ConfirmNewPassword\r\n      <form onSubmit={resetPassword}>\r\n        <label>Enter new password: </label>\r\n        <input type='password' name='password' onChange={(e) => setPassword(e.target.value)} />\r\n        <button type='submit'>Reset Password</button>\r\n      </form>\r\n      <h2>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmNewPassword"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM;IAACC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CACvB,mGAAkG,EACnG;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,QAAQ;QAAED;MAAM,CAAC;IAC1C,CACF,CAAC;IAEDQ,QAAQ,GAAG,MAAMA,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEhC,IAAGP,QAAQ,CAACQ,MAAM,KAAK,IAAI,IAAIR,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAC;MACnDZ,UAAU,CAAC,4CAA4C,CAAC;IAC5D,CAAC,MAAI;MACDA,UAAU,CAAC,kCAAkC,CAAC;IAClD;EAEF,CAAC;EAED,oBACEP,OAAA;IAAAoB,QAAA,GAAK,oBAEH,eAAApB,OAAA;MAAMqB,QAAQ,EAAEb,aAAc;MAAAY,QAAA,gBAC5BpB,OAAA;QAAAoB,QAAA,EAAO;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCzB,OAAA;QAAO0B,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAGnB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACoB,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvFzB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACPzB,OAAA;MAAAoB,QAAA,EAAKd;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACvB,EAAA,CAzCQD,kBAAkB;EAAA,QAETH,SAAS;AAAA;AAAAiC,EAAA,GAFlB9B,kBAAkB;AA2C3B,eAAeA,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}