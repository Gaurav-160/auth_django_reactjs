{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\drfBacktest\\\\frontend\\\\src\\\\views\\\\Login.js\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  // const clientId =\n  //   \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\";\n\n  const onSuccess = async res => {\n    console.log(\"google response: \", res);\n    const googleResponse = {\n      idToken: res.credential\n    };\n\n    // const response = await fetch(\n    //   \"http://localhost:8000/api/google-auth/\",\n    //   {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       // 'Access-Control-Allow-Origin': 'http://127.0.0.1:3000',\n    //       // 'Access-Control-Allow-Credentials': true,\n    //     },\n    //     // withCredential: true,\n    //     body: JSON.stringify(googleResponse),\n    //   }\n    // );\n    // console.log(\"response data of fetch api: \", response);\n    // const data = await response.json();\n    // console.log(\"googleView Response: \", data);\n\n    // const DecodedToken = jwtDecode(googleResponse.userCredential);\n    // console.log(DecodedToken);\n    const user = {\n      backend: \"google-oauth2\",\n      client_id: \"iBzvk3Uq6XssKDLrEhGMqYlsVKMmeHucErk1GjqF\",\n      client_secret: \"vxW4H3xKXwNL6z3bXTheBEsQjgP9upCgglItvvPr5R3CWl8TaJZG1gl9Ae5RgqPbLQ51N8csSVgcWE88TETAqhpRXFwcvEBpAr6dvi34yOOfAnbQc8ha7aa6yOiYMjgn\",\n      grant_type: \"convert_token\",\n      // token: res.credential,\n      token: \"ya29.a0AfB_byDXRfrwf1hX20Q7mE-1-IeEkCzIdculXrEei-zwS6Y82sbRIdBJ0y4eKtmaYY2ZnaXMZae_gex1f2i4dHAJI69MLemCEw-u-5Eq5rJdUYEs8P1x6bwJASNqbKCrJmzdHeu1HSUvl2u-Q5fnLfh7rmPpPCdbq4t7pl0vTgaCgYKAb0SARMSFQHGX2MiXdG4Igjxg3auF4q1WXI_tQ0177\"\n    };\n    console.log(user);\n    console.log(\"Stringify: \");\n    console.log(JSON.stringify(user));\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api-auth/convert-token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredential: true,\n        body: JSON.stringify(user)\n      });\n      const data = await response.json();\n\n      //  const { data } = await axios.post(\n      //    \"http://localhost:8000/api-auth/convert-token/\",\n      //    user,\n      //    {\n      //      headers: {\n      //        \"Content-Type\": \"application/json\",\n      //        \"Access-Control-Allow-Credentials\": \"*\",\n      //      },\n      //      withCredentials: true,\n      //    },\n      //  );\n      console.log(\"Response:\", data);\n      // axios.defaults.headers.common['Authorization'] = `Bearer ${data['access_token']}`;\n      // localStorage.clear();\n      // localStorage.setItem('access_token', data.access_token);\n      // localStorage.setItem('refresh_token', data.refresh_token);\n      // window.location.href = '/'\n    } catch (error) {\n      console.log(\"error: \", error);\n      console.log(\"error config: \", error.config);\n    }\n  };\n  const onFailure = err => {\n    console.log(\"failed:\", err);\n  };\n  const sendLoginRequest = async () => {\n    const params = {\n      client_id: \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\"\n    };\n    const url = \"\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(params)\n    });\n    const responseData = response.json();\n    console.log(\"responseData: \", responseData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: onSuccess\n      //   onSuccess={(credentialResponse) => {\n      //     console.log(credentialResponse);\n      //   }}\n      //   onError={() => {\n      //     console.log(\"Login Failed\");\n      //   }}\n      ,\n      onError: onFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: sendLoginRequest,\n      children: \"Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","Navigate","useState","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","Login","onSuccess","res","console","log","googleResponse","idToken","credential","user","backend","client_id","client_secret","grant_type","token","JSON","stringify","response","fetch","method","headers","withCredential","body","data","json","error","config","onFailure","err","sendLoginRequest","params","url","responseData","className","children","onError","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/drfBacktest/frontend/src/views/Login.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport {jwtDecode} from \"jwt-decode\"\r\n\r\nexport const Login = () => {\r\n  // const clientId =\r\n  //   \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\";\r\n\r\n  const onSuccess = async (res) => {\r\n    console.log(\"google response: \", res);\r\n\r\n    const googleResponse = {\r\n      idToken: res.credential,\r\n    };\r\n\r\n    // const response = await fetch(\r\n    //   \"http://localhost:8000/api/google-auth/\",\r\n    //   {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //       // 'Access-Control-Allow-Origin': 'http://127.0.0.1:3000',\r\n    //       // 'Access-Control-Allow-Credentials': true,\r\n    //     },\r\n    //     // withCredential: true,\r\n    //     body: JSON.stringify(googleResponse),\r\n    //   }\r\n    // );\r\n    // console.log(\"response data of fetch api: \", response);\r\n    // const data = await response.json();\r\n    // console.log(\"googleView Response: \", data);\r\n\r\n\r\n    // const DecodedToken = jwtDecode(googleResponse.userCredential);\r\n    // console.log(DecodedToken);\r\n    const user = {\r\n      backend: \"google-oauth2\",\r\n      client_id: \"iBzvk3Uq6XssKDLrEhGMqYlsVKMmeHucErk1GjqF\",\r\n      client_secret:\r\n        \"vxW4H3xKXwNL6z3bXTheBEsQjgP9upCgglItvvPr5R3CWl8TaJZG1gl9Ae5RgqPbLQ51N8csSVgcWE88TETAqhpRXFwcvEBpAr6dvi34yOOfAnbQc8ha7aa6yOiYMjgn\",\r\n      grant_type: \"convert_token\",\r\n      // token: res.credential,\r\n      token:\r\n        \"ya29.a0AfB_byDXRfrwf1hX20Q7mE-1-IeEkCzIdculXrEei-zwS6Y82sbRIdBJ0y4eKtmaYY2ZnaXMZae_gex1f2i4dHAJI69MLemCEw-u-5Eq5rJdUYEs8P1x6bwJASNqbKCrJmzdHeu1HSUvl2u-Q5fnLfh7rmPpPCdbq4t7pl0vTgaCgYKAb0SARMSFQHGX2MiXdG4Igjxg3auF4q1WXI_tQ0177\",\r\n    };\r\n\r\n    console.log(user);\r\n    console.log(\"Stringify: \");\r\n    console.log(JSON.stringify(user));\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://127.0.0.1:8000/api-auth/convert-token\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          withCredential: true,\r\n          body: JSON.stringify(user),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      //  const { data } = await axios.post(\r\n      //    \"http://localhost:8000/api-auth/convert-token/\",\r\n      //    user,\r\n      //    {\r\n      //      headers: {\r\n      //        \"Content-Type\": \"application/json\",\r\n      //        \"Access-Control-Allow-Credentials\": \"*\",\r\n      //      },\r\n      //      withCredentials: true,\r\n      //    },\r\n      //  );\r\n      console.log(\"Response:\", data);\r\n      // axios.defaults.headers.common['Authorization'] = `Bearer ${data['access_token']}`;\r\n      // localStorage.clear();\r\n      // localStorage.setItem('access_token', data.access_token);\r\n      // localStorage.setItem('refresh_token', data.refresh_token);\r\n      // window.location.href = '/'\r\n    } catch (error) {\r\n      console.log(\"error: \", error);\r\n      console.log(\"error config: \", error.config)\r\n    }\r\n  };\r\n\r\n  const onFailure = (err) => {\r\n    console.log(\"failed:\", err);\r\n  };\r\n\r\n  const sendLoginRequest = async () => {\r\n    const params = {\r\n      client_id:\r\n        \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\",\r\n        \r\n    };\r\n    const url = \"\"\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(params),\r\n    });\r\n\r\n    const responseData = response.json()\r\n    console.log(\"responseData: \", responseData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Auth-form-container\">\r\n      <GoogleLogin\r\n        onSuccess={onSuccess}\r\n        //   onSuccess={(credentialResponse) => {\r\n        //     console.log(credentialResponse);\r\n        //   }}\r\n        //   onError={() => {\r\n        //     console.log(\"Login Failed\");\r\n        //   }}\r\n        onError={onFailure}\r\n      />\r\n\r\n      <button type=\"submit\" onClick={sendLoginRequest}>Google Login</button>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}