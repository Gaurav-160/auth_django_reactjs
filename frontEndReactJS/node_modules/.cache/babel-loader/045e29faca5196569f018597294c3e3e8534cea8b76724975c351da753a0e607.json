{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\drfBacktest\\\\frontend\\\\src\\\\views\\\\ResetPassword.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { MDBBtn, MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBModalBody, MDBModalFooter } from 'mdb-react-ui-kit';\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResetPassword({\n  props\n}) {\n  _s();\n  const [basicModal, setBasicModal] = useState(false);\n  const toggleOpen = () => setBasicModal(!basicModal);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: toggleOpen,\n      children: \"LAUNCH DEMO MODAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      open: basicModal,\n      setopen: setBasicModal,\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        size: \"lg\",\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Modal title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(EmailForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"secondary\",\n              onClick: toggleOpen,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ResetPassword, \"VXD3hrwBgl5CLu65y2T0QXDUbME=\");\n_c = ResetPassword;\nfunction EmailForm() {\n  _s2();\n  const [email, setEmail] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const {\n    resetPassword\n  } = useContext(AuthContext);\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (resetPassword(email)) {\n      setContent(\"An email containing reset password link has been sent to your registered email id. Kindly open the link sent to reset your password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter the registered email id: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s2(EmailForm, \"rx4AJNaaILTJLz3QesGcxNTHCGc=\");\n_c2 = EmailForm;\nexport { ResetPassword };\nvar _c, _c2;\n$RefreshReg$(_c, \"ResetPassword\");\n$RefreshReg$(_c2, \"EmailForm\");","map":{"version":3,"names":["React","useState","useContext","MDBBtn","MDBModal","MDBModalDialog","MDBModalContent","MDBModalHeader","MDBModalTitle","MDBModalBody","MDBModalFooter","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","props","_s","basicModal","setBasicModal","toggleOpen","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","setopen","tabIndex","size","centered","className","color","EmailForm","content","_c","_s2","email","setEmail","setContent","resetPassword","handleResetPassword","e","preventDefault","onSubmit","id","type","name","onChange","target","value","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/drfBacktest/frontend/src/views/ResetPassword.js"],"sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\n\r\nfunction ResetPassword({props}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleOpen = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleOpen}>LAUNCH DEMO MODAL</MDBBtn>\r\n      <MDBModal open={basicModal} setopen={setBasicModal} tabIndex='-1'>\r\n        <MDBModalDialog size='lg' centered>\r\n          <MDBModalContent>\r\n            <MDBModalHeader>\r\n              <MDBModalTitle>Modal title</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleOpen}></MDBBtn>\r\n            </MDBModalHeader>\r\n              <MDBModalBody>\r\n                <EmailForm />\r\n                <h2>{content}</h2>\r\n              </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleOpen}>\r\n                Close\r\n              </MDBBtn>\r\n              <MDBBtn>Submit</MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nfunction EmailForm() {\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [content, setContent] = useState(\"\")\r\n\r\n    const {resetPassword} = useContext(AuthContext)\r\n\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault()\r\n        if(resetPassword(email)){\r\n            setContent(\"An email containing reset password link has been sent to your registered email id. Kindly open the link sent to reset your password.\")\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Reset Password</h1>\r\n        <form onSubmit={handleResetPassword}>\r\n            <label>Enter the registered email id: </label>\r\n            <input id='email' type='email' name = \"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ResetPassword}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}