{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\drfBacktest\\\\frontend\\\\src\\\\views\\\\Login.js\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  // const clientId =\n  //   \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\";\n\n  const onSuccess = async res => {\n    console.log(\"user credentials:\", res);\n    const googleResponse = {\n      clientId: res.clientId,\n      userCredential: res.credential\n    };\n    const response = await fetch(\"http://localhost:8000/api/google-auth\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': 'http://127.0.0.1:3000'\n      },\n      // withCredential: true,\n      body: JSON.stringify({\n        idToken: res.credential\n      })\n    });\n    console.log(\"response data of fetch api: \", response);\n    const data = await response.json();\n    console.log(\"googleView Response: \", data);\n    const DecodedToken = jwtDecode(googleResponse.userCredential);\n    console.log(DecodedToken);\n    const user = {\n      backend: \"google-oauth2\",\n      client_id: \"iBzvk3Uq6XssKDLrEhGMqYlsVKMmeHucErk1GjqF\",\n      client_secret: \"vxW4H3xKXwNL6z3bXTheBEsQjgP9upCgglItvvPr5R3CWl8TaJZG1gl9Ae5RgqPbLQ51N8csSVgcWE88TETAqhpRXFwcvEBpAr6dvi34yOOfAnbQc8ha7aa6yOiYMjgn\",\n      grant_type: \"convert_token\",\n      token: res.credential\n    };\n    console.log(user);\n\n    // try {\n    //   const response = await fetch(\n    //     \"http://127.0.0.1:8000/api-auth/convert-token/\",\n    //     {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       withCredential: true,\n    //       body: user,\n    //     }\n    //   );\n    //   console.log(\"response data of fetch api: \", response);\n    //   const data = await response.json();\n\n    //   //  const { data } = await axios.post(\n    //   //    \"http://localhost:8000/api-auth/convert-token/\",\n    //   //    user,\n    //   //    {\n    //   //      headers: {\n    //   //        \"Content-Type\": \"application/json\",\n    //   //        \"Access-Control-Allow-Credentials\": \"*\",\n    //   //      },\n    //   //      withCredentials: true,\n    //   //    },\n    //   //  );\n    //   console.log(\"Response:\", data);\n    //   // axios.defaults.headers.common['Authorization'] = `Bearer ${data['access_token']}`;\n    //   // localStorage.clear();\n    //   // localStorage.setItem('access_token', data.access_token);\n    //   // localStorage.setItem('refresh_token', data.refresh_token);\n    //   // window.location.href = '/'\n    // } catch (error) {\n    //   console.log(\"error: \", error);\n    //   console.log(\"error config: \", error.config)\n    // }\n  };\n\n  const onFailure = err => {\n    console.log(\"failed:\", err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Auth-form-container\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: onSuccess\n      //   onSuccess={(credentialResponse) => {\n      //     console.log(credentialResponse);\n      //   }}\n      //   onError={() => {\n      //     console.log(\"Login Failed\");\n      //   }}\n      ,\n      onError: onFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","Navigate","useState","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","Login","onSuccess","res","console","log","googleResponse","clientId","userCredential","credential","response","fetch","method","headers","body","JSON","stringify","idToken","data","json","DecodedToken","user","backend","client_id","client_secret","grant_type","token","onFailure","err","className","children","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/drfBacktest/frontend/src/views/Login.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport {jwtDecode} from \"jwt-decode\"\r\n\r\nexport const Login = () => {\r\n  // const clientId =\r\n  //   \"140549363583-00rh8vdh92h6lfd4motbkfns8nimqk0n.apps.googleusercontent.com\";\r\n\r\n  const onSuccess = async (res) => {\r\n    console.log(\"user credentials:\", res);\r\n\r\n    const googleResponse = {\r\n      clientId: res.clientId,\r\n      userCredential: res.credential,\r\n    };\r\n    const response = await fetch(\r\n      \"http://localhost:8000/api/google-auth\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Access-Control-Allow-Origin': 'http://127.0.0.1:3000'\r\n        },\r\n        // withCredential: true,\r\n        body: JSON.stringify({idToken: res.credential}),\r\n      }\r\n    );\r\n    console.log(\"response data of fetch api: \", response);\r\n    const data = await response.json();\r\n    console.log(\"googleView Response: \", data);\r\n\r\n\r\n    const DecodedToken = jwtDecode(googleResponse.userCredential);\r\n    console.log(DecodedToken);\r\n    const user = {\r\n      backend: \"google-oauth2\",\r\n      client_id: \"iBzvk3Uq6XssKDLrEhGMqYlsVKMmeHucErk1GjqF\",\r\n      client_secret:\r\n        \"vxW4H3xKXwNL6z3bXTheBEsQjgP9upCgglItvvPr5R3CWl8TaJZG1gl9Ae5RgqPbLQ51N8csSVgcWE88TETAqhpRXFwcvEBpAr6dvi34yOOfAnbQc8ha7aa6yOiYMjgn\",\r\n      grant_type: \"convert_token\",\r\n      token: res.credential,\r\n    };\r\n\r\n    console.log(user);\r\n\r\n    // try {\r\n    //   const response = await fetch(\r\n    //     \"http://127.0.0.1:8000/api-auth/convert-token/\",\r\n    //     {\r\n    //       method: \"POST\",\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //       withCredential: true,\r\n    //       body: user,\r\n    //     }\r\n    //   );\r\n    //   console.log(\"response data of fetch api: \", response);\r\n    //   const data = await response.json();\r\n\r\n    //   //  const { data } = await axios.post(\r\n    //   //    \"http://localhost:8000/api-auth/convert-token/\",\r\n    //   //    user,\r\n    //   //    {\r\n    //   //      headers: {\r\n    //   //        \"Content-Type\": \"application/json\",\r\n    //   //        \"Access-Control-Allow-Credentials\": \"*\",\r\n    //   //      },\r\n    //   //      withCredentials: true,\r\n    //   //    },\r\n    //   //  );\r\n    //   console.log(\"Response:\", data);\r\n    //   // axios.defaults.headers.common['Authorization'] = `Bearer ${data['access_token']}`;\r\n    //   // localStorage.clear();\r\n    //   // localStorage.setItem('access_token', data.access_token);\r\n    //   // localStorage.setItem('refresh_token', data.refresh_token);\r\n    //   // window.location.href = '/'\r\n    // } catch (error) {\r\n    //   console.log(\"error: \", error);\r\n    //   console.log(\"error config: \", error.config)\r\n    // }\r\n  };\r\n\r\n  const onFailure = (err) => {\r\n    console.log(\"failed:\", err);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Auth-form-container\">\r\n      <GoogleLogin\r\n        onSuccess={onSuccess}\r\n        //   onSuccess={(credentialResponse) => {\r\n        //     console.log(credentialResponse);\r\n        //   }}\r\n        //   onError={() => {\r\n        //     console.log(\"Login Failed\");\r\n        //   }}\r\n        onError={onFailure}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAAQC,SAAS,QAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB;EACA;;EAEA,MAAMC,SAAS,GAAG,MAAOC,GAAG,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,GAAG,CAAC;IAErC,MAAMG,cAAc,GAAG;MACrBC,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;MACtBC,cAAc,EAAEL,GAAG,CAACM;IACtB,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uCAAuC,EACvC;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE;MACjC,CAAC;MACD;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,OAAO,EAAEd,GAAG,CAACM;MAAU,CAAC;IAChD,CACF,CAAC;IACDL,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEK,QAAQ,CAAC;IACrD,MAAMQ,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCf,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEa,IAAI,CAAC;IAG1C,MAAME,YAAY,GAAGtB,SAAS,CAACQ,cAAc,CAACE,cAAc,CAAC;IAC7DJ,OAAO,CAACC,GAAG,CAACe,YAAY,CAAC;IACzB,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAE,eAAe;MACxBC,SAAS,EAAE,0CAA0C;MACrDC,aAAa,EACX,kIAAkI;MACpIC,UAAU,EAAE,eAAe;MAC3BC,KAAK,EAAEvB,GAAG,CAACM;IACb,CAAC;IAEDL,OAAO,CAACC,GAAG,CAACgB,IAAI,CAAC;;IAEjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMM,SAAS,GAAIC,GAAG,IAAK;IACzBxB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEuB,GAAG,CAAC;EAC7B,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClC9B,OAAA,CAACH,WAAW;MACVK,SAAS,EAAEA;MACX;MACA;MACA;MACA;MACA;MACA;MAAA;MACA6B,OAAO,EAAEJ;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAjGWnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}